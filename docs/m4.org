#+TITLE: Interior Designer Mobile App
#+latex_header: \subtitle{Final report}
#+latex_header: \author{Asım Oğuz}
#+latex_header: \author{Dominik Pegler}
#+latex_header: \author{Sophia Pum}
#+latex_header:\email{a11911461@unet.univie.ac.at}
#+latex_header:\email{a01468373@unet.univie.ac.at}
#+latex_header:\email{a11910969@unet.univie.ac.at}
#+latex_header: \affiliation{%
#+latex_header:  \institution{University of Vienna}
#+latex_header:  \city{Vienna}
#+latex_header:  \country{Austria}}
#+latex_header: \keywords{interior, design, augmented reality, mobile application, react native}
#+SETUPFILE: setupfile_acm_proceedings.org

# with this setup first page has to be deleted from the PDF file
# since this is a result of 2 maketitle commands
# the first maketitle command ideally should be deleted or moved AFTER the abstract
# still no idea how to do that

#+begin_abstract

The aim of this project was the creation of a first prototype of a
mobile application for the simple creation of sketches in the field of
interior design. In the following, the course of the development of
hand sketches up to prototypes created with the react-native framework
is shown and problem situations and optimization options are
discussed. With a strong focus on simplicity this project delivered a
solid prototype of a user interface which, due to the complexity of
the requirements in the area of interior design and the associated
technologies still to be implemented, such as augmented reality, has
to be evaluated again at a later stage.

#+end_abstract

#+LATEX: \begin{teaserfigure}
#+LATEX:  \includegraphics[width=\textwidth]{./img/m4_background.png}
#+LATEX:  \caption{Interior Designer Mobile App Project, 2021.}
#+LATEX:  \label{fig:teaser}
#+LATEX: \end{teaserfigure}
#+LATEX: \maketitle

* Motivation
** Problem 
Imagine you are moving out to a new place or you want to redesign a room of yours. What options do you have while designing? How well will the furnitures fit in your room? Will the style match your expectations? These are just some of the many questions that will pop out if you have a room designing process ahead of you. The typical solution for this would be just imagining it, making sketches by hand or just trying it out, but this would be too much expenditure and that is the reason why the interior designer app should be used.
 
** Tasks of the app
The main purpose of the app is to minimize the effort to design a room and not just a room but specifically the room that you need to get designed, that is why the app allows you to scan rooms. This leads to you having the exact room you need and eases the transformation from design into reality. There is also the option to choose a pre-existing room just in case you want to try out new styles or want to experiment a little. Once a room is selected the user has the possibility to import furnituters and arrange them as they wish until the room has the desired design. And as soon as the room is finished it can be saved in the form of an exported image.
 
** Users
The user spectrum for this app is actually pretty wide. Everyone who
is able to handle mobile devices and has some interest in designing
or redesigning is a potential user this also leads to that the app has
to be designed in a way that it can be used by the whole spectrum. 
Our target group are people from the age of 18 – 40, as well as modern people who are interested in new solutions. The users we want to reach, are familiar with new technologies and open to try new things. They also should be interested in design and are willing to take their time to experiment around. Still the target group is be practical and wants to find the most efficient but convenient solutions. 


/(Asım Oğuz)/
* Related work
There are already quite a few Interior Design Apps on the market, like we have already analyzed in the Konkurrenzanalyse in Milestone 1. Those include some really good systems with a lot of features. In order to stand out from these Applications we tried to make a simple and well-structured solution, which concentrates on the main features while keeping everything minimal. The main things we focused on was the room scanning and setting up rooms with furniture. We also put a big focus on a simple and straight-forward design. 

Simply scanning a room, saving the scan and adding furniture afterwards is how user can design their own room. We also discussed realizing the scanning process via Augmented Reality, so that the user can make quick and real-time changes to their room. However, we figured that this is  not the best solution for us and the user, since it not good for planning long-term interior designs and hard to implement for us, who lack in front end programming experience.

We discussed some different solutions for our app during Milestone 2, the low-fi prototyping. All of us developed a unique idea of how we could realize our app. Some things we all had in common was a screen for room scanning, a screen for setting up a room and a home screen for navigation. As mentioned before those ended up being our main features. A functionality which we also talked about was a photo library of rooms and furniture for inspiration. Many existing apps, similar to ours include something like that, but we decided against it, since it is not necessary to have in our app.

All of us have hardly any to no experience with UI or App programming. Neither has anyone of us worked on something similar to our interior design app. All of us made our first frontend programming experiences during A2 of the Human-Computer-Interface VU, where we implemented a simple Application to search for musicians and  display related information. Even though it is the only work which relates to our App, we could get some of use of it. For example the navigation via buttons on the home screen. 

/(Sophia Pum)/
* Design

The main design aspect we have decided on from the beginning of the
project, was to keep everything simple and clean. All of us agreed,
that a minimalistic and abstract design would fit the best for our
system, our target group and the whole concept of our app. We wanted
to keep everything straightforward, from the functionalities and to
the design. Furthermore, we also thought a clear design is important
for our app, since there are already a few similar products on the
market, so we needed an uncomplicated appearance in order to make
users interested and stay with our app.

** Home Screen
The Home Screen (see fig. ref:fig:homescreen) is the first screen
which users will see when they open the app. From our own experience
we know, that people will not stay long if they get overwhelmed by
text, pictures and icons. So we tried to avoid that by simply adding a
clear and light-toned background picture, our minimal logo and a
simple and uncomplicated navigation.

#+caption: HomeScreen
#+name: fig:homescreen
#+attr_latex: :width 180px
file:./img/m4_design_homescreen.png

** Scan Screen
We wanted the Scan Screen to be pretty self-explanatory and designed
it very simple by adding arrow icons, which should help guiding the
user through the scan process.  During earlier prototyping steps, we
thought of including more specific text introductions, to explain the
scanning to the user, but we decided against it. Firstly, because it
is not a difficult step to do and secondly because our target group
are rather young people, that we expect to have some knowledge of
modern technologies.  However after carrying out the interviews, the
feedback included, that a short instruction would be nice, in order to
avoid confusion and provide a simple overview. So we added a process
bar, and a short statement, which tells the user to turn around in the
room.

#+caption: ScanScreen
#+name: fig:scanscreen
#+attr_latex: :width 180px
file:./img/m4_design_scanscreen.png

** Room and Object Screen
The Object and the Room Select Screen (fig. ref:fig:roomselectscreen)
are designed pretty similar. The rooms and objects are simply listed
with a picture and a title. The user can navigate through that list,
via scrolling by simply swiping up and down. We chose this solution,
because it is a very common feature in modern apps, so our target
group should be familiar with it. The Room Screen
(fig. ref:fig:roomscreen) itself is designed very abstract, with no
text, just the icons. This might get the user confused in the first
place, but they will quickly be able to understand everything, by
clicking around a bit. We also decided on simple icons, without any
fancy details, so the user should easily identify the symbols and have
an idea of what will happen.

#+caption: RoomScreen
#+name: fig:roomscreen
#+attr_latex: :width 180px
file:./img/m4_design_roomscreen.jpg

#+caption: RoomSelectScreen
#+name: fig:roomselectscreen
#+attr_latex: :width 180px
file:./img/m4_design_roomselectscreen.png

** Overall
All in all keeping the design simple and consistent was not always
easy, even though it might sound like that. During early prototyping
steps we soon realized that everyone has a different interpretation of
a minimal design and that it is important to precisely analyze what
aspects are essential for a smooth user experience and what we could
skip on. /(Sophia Pum)/
* Implementation

The app was developed in react-native which is an open-source
JavaScript library that is used for building mobile user
interfaces. While implementing the app we have not used any templates
and the only toolkit used was expo-camera. This was necessary to be
able to get access to the camera of the device and be able to
implement the ScanScreen. React-native allows for development for both
android and IOS at the same time so the interior designer app is
available for both of these platforms. The main problem of ours was
the missing knowledge about developing in react-native or
ReactJS. None of us had ever used this framework before so it was not
easy to adapt to the new required developing style needed by
react-native, this led to us needing to do a lot of research. An
example for this would be when to use absolute and when to use
relative positions for the react elements. Using the wrong style led
to unexpected results which took quite some time to resolve.  Our main
problem solving method was research and there is a lot of content
about react-native online so we were almost always able to find a
solution. We also had a really great communication in the team. This
was maybe the result of us just being a three person team, but thanks
to communication we did not have to deal with the problems by
ourselves and could help eachother out. /(Asım Oğuz)/

* Evaluation
There were eight participants who were included in the study varying
in age, profession and gender. Because of our wide spectrum of
possible users we had the goal to choose the participants from
different groups to be able to represent all of our target group. The
participants were provided with the app and were requested to answer a
total of 23 questions doing 5 different tasks. While choosing the
tasks we tried to cover the whole app. The following section shows
these tasks: Scanne einen Raum ein und bestätige den Scan.  Wähle
einen Raum Gestalte den Raum Wähle ein Objekt aus Ändere die
Einstellungen

And finally after all these tasks were completed we asked for a general review of the app.

** The result

The feedback we got from almost all of our participants was that the app was designed in a clean and easy to use way. This was a purpose of ours so it can be said that we have reached a goal regarding design. Most of the negative feedback was regarding the scanscreen which is understandable because this is a unique feature of our app and the users are not used to a task like this but in the end they all succeeded in using it so it can be said that they needed some time and adaptation to this. A detailed result about improvement ideas is shown in an external table. /(Asım Oğuz)/

(Lösungsvorschläge zu Feedbacks)

* Reflection

The most important lessons we have learned were not regarding programming but they were about planning and designing of the app. We have learned that design is an iterative process so this means no matter how well you think about everything in the end there will be points that have to be optimized. Another important point we learned was the significance of letting the users test the app. Since we were involved in the development process from the beginning every screen and every function was clear and understandable for us but this was not the case for the users. Thanks to the interviews we were able see the odd things in the app and adjust them. So for future works we will have in mind to include users in the design process from the beginnig. /(Asım Oğuz)/

The work separation is shown in an additional spreadsheet file ("Arbeitsaufteilung M4").

* Conclusions and future work

Due to the goal of creating an application for use in the area of
​​interior design and the complexity and variety of necessary
technologies that comes with it, especially in the backend, it could
not be assumed from the start that we would create much more than a
highly simulation-heavy user interface for such a project which could
serve as the basis for further work. We think we reached our goals for
the most part. The current immplementation is already well prepared
for the expected increase in complexity in the further course, in that
the interface is based on a design that is as simple as possible and
already equipped with familiar style elements. So we expect that at
least from the interface side, the amount of possible problems for
users in dealing with the application can be kept low. Negative
criticism from the user study suggested minor adjustments rather than
major concept changes, which will also be included in the next
releases. In the following sections we want to discuss possible
further work.

** Simplicity doesn't just have advantages

Certain functions have not been considered because of the strong focus
on simplicity. This applies, for example, to the storage of rooms or
objects. The app currently only offers the option of saving a room in
the last configuration and overwriting the original room. Here we
should provide more flexibility and enable users to duplicate rooms,
rename them and save them in multiple configurations (i.e. with
different objects and arrangement options). The concept of "rooms" and
"objects" should therefore be expanded to include a concept of
"projects", which contain all these different configurations. The
concept of the rooms, like that of the objects, would then be limited
in its definition to simple 3D models.

** Cross-device and cross-platform development

Another essential aspect that needs to be dealt with immediately on
the user interface is converting the layout into a cross-device and
cross-platform-compatible layout. In the current implementation, some
elements are still "hard-coded" for the sake of faster implementation
and are not completely reliable in being able to adapt flexibly to all
possible conditions such as screen sizes.

** Research on available technologies
  In future work, however, we no longer want to devote ourselves
  completely to the UI, but instead do more research to explore which
  technologies (such as augmented or virtual reality) would be
  suitable for the purpose. Since these determine the functionality of
  the app and thus define its feasibility and usefulness, the focus
  should be placed here in order not to invest in a project that
  cannot be implemented with the currently available technologies.

** Purpose of the application
  Another focus will be on working out the distinguishing features to
  existing interior design solutions. This includes, for example, an
  "open" approach in the sense of an free and open exchange of digital
  objects, which, in addition to a mobile app, could lead to a
  separate platform for object exchange. We want to enable users to
  decide on the best possible and therefore most sustainable
  configuration for their living environment. We want the right pieces
  of furniture to find their way to the right people and not end up on
  second-hand platforms or in the garbage dump in a short time.

/(Dominik Pegler)/
  
* References

* noexport                                                         :noexport:

** Local functions                                        :noexport:
  :PROPERTIES:
  :EXPORT_TITLE: Annotated Bibliography Template
  :EXPORT_OPTIONS: tags:nil todo:nil
  :END:
*** User Entities
The following source code block sets up user entities that are used frequently
in my work. I use the various =.*macron= commands to typeset Hawaiian
language words with what is known in Hawaiian as a /kahak\omacron{}/.

The =space= entity is useful following a period that doesn't end a
sentence. LaTeX sets a space slightly longer than an inter-word space
following a sentence ending period. The =space= entity lets LaTeX know
to set an inter-word space.

#+name: user-entities
#+begin_src emacs-lisp
  (setq org-entities-user nil)
  (add-to-list 'org-entities-user '("space" "\\ " nil " " " " " " "–"))
  (add-to-list 'org-entities-user '("amacron" "\\={a}" nil "&#0257" "a" "a" "ā"))
  (add-to-list 'org-entities-user '("emacron" "\\={e}" nil "&#0275" "e" "e" "ē"))
  (add-to-list 'org-entities-user '("imacron" "\\={\\i}" nil "&#0299" "i" "i" "ī"))
  (add-to-list 'org-entities-user '("omacron" "\\={o}" nil "&#0333" "o" "o" "ō"))
  (add-to-list 'org-entities-user '("umacron" "\\={u}" nil "&#0363" "u" "u" "ū"))
  (add-to-list 'org-entities-user '("Amacron" "\\={A}" nil "&#0256" "A" "A" "Ā"))
  (add-to-list 'org-entities-user '("Emacron" "\\={E}" nil "&#0274" "E" "E" "Ē"))
  (add-to-list 'org-entities-user '("Imacron" "\\={I}" nil "&#0298" "I" "I" "Ī"))
  (add-to-list 'org-entities-user '("Omacron" "\\={O}" nil "&#0332" "O" "O" "Ō"))
  (add-to-list 'org-entities-user '("Umacron" "\\={U}" nil "&#0362" "U" "U" "Ū"))
#+end_src
*** LaTeX Process
The Org mode variable =org-latex-pdf-process= holds a list of strings,
each of which is run as a shell command. Typically, several commands
are needed to process a LaTeX document to produce pdf output. The
following two source code blocks use a straightforward approach that
should work in most cases. The source code block named
[[set-pdf-process-bibtex][set-pdf-process-bibtex]] uses [[http://www.bibtex.org/Using/][BibTeX]] to process the bibliography. BibTeX
has been a standard for many years in the LaTeX world. The source code
block named [[set-pdf-process-biber][set-pdf-process-biber]] uses a newer bibliography processor
named [[http://biblatex-biber.sourceforge.net/][Biber]], which is designed to work with [[http://www.ctan.org/pkg/biblatex][BibLaTeX]].  The choice of
which one to use must be reflected in the =usepackage= command for
BibLaTeX at the top of this file; the optional command =backend= takes
either =bibtex= or =biber= as its value.

At a practical level, perhaps the main difference between Biber and
BibTeX is how they handle special characters. The bibliographic
database for BibTeX uses LaTeX commands for special characters while
the database for Biber uses UTF-8 characters.

#+name: set-pdf-process-bibtex
#+header: :results silent
#+begin_src emacs-lisp
  (setq org-latex-pdf-process
        '("pdflatex -interaction nonstopmode -output-directory %o %f"
          "bibtex %b"
          "pdflatex -interaction nonstopmode -output-directory %o %f"
          "pdflatex -interaction nonstopmode -output-directory %o %f"))
#+end_src

#+name: set-pdf-process-biber
#+header: :results silent
#+begin_src emacs-lisp
  (setq org-latex-pdf-process
        '("pdflatex -interaction nonstopmode -output-directory %o %f"
          "biber %b"
          "pdflatex -interaction nonstopmode -output-directory %o %f"
          "pdflatex -interaction nonstopmode -output-directory %o %f"))
#+end_src


*** Cite Link
:PROPERTIES:
:ARCHIVE_TIME: 2021-02-06 Sat 21:11
:ARCHIVE_FILE: ~/Dropbox/org/mindfulness_lit.org
:ARCHIVE_OLPATH: TODOS
:ARCHIVE_CATEGORY: fls-article
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: noexport
:END:
There are many ways to manage citations in Org mode. My preference is
to manage the bibliography database with [[http://joostkremers.github.io/ebib/][Ebib: a BibTeX database
manager for Emacs]] and insert citations using a custom Org mode link. I
find the work flow convenient and the look of the Org mode buffer
"good enough."

The source code block named [[ebib-setup][ebib-setup]] defines a cite command that
[[http://joostkremers.github.io/ebib/][Ebib]] will use to insert citations in an Org mode buffer. It inserts
the BibTeX key as the path part of the link and then offers the user
three prompts to enter strings separated by semi-colons as the
description part of the link. The first of these typically holds a
page number, the second holds a string that appears before the in-text
citation (typically, something like "e.g.,"), and the third is the
description of the citation visible in the Org mode buffer.

The source code block named [[define-biblatex-cite-link][define-biblatex-cite-link]] defines an Org
mode link type that parses the link inserted by [[http://joostkremers.github.io/ebib/][Ebib]] and outputs a
correctly formatted LaTeX citation. In theory, it is possible also to
export correctly formatted citations to other backends, but the link
type defined here doesn't do that. The html export simply sandwiches
the BibTeX key between =<cite>= tags and is included here as a
placeholder for future development.

#+name: ebib-setup
#+begin_src emacs-lisp
  (setq ebib-citation-commands
        (quote ((any (("cite" "\\cite%<[%A]%>{%K}")))
                (org-mode (("cite" "[[cite:%K][%A;%A;%A]]"))))))
#+end_src

#+name: define-biblatex-cite-link
#+begin_src emacs-lisp :results silent
  (org-add-link-type 
   "cite" 'ebib
   (lambda (path desc format)
     (cond
      ((eq format 'html)
       (format "(<cite>%s</cite>)" path))
      ((eq format 'latex)
       (if (or (not desc) (equal 0 (search "cite:" desc)))
           (format "\\cite{%s}" path)
         (format "\\cite[%s][%s]{%s}"
                 (cadr (split-string desc ";"))
                 (car (split-string desc ";"))  path))))))
#+end_src

*** Koma Article
:PROPERTIES:
:ARCHIVE_TIME: 2021-02-06 Sat 21:10
:ARCHIVE_FILE: ~/Dropbox/org/mindfulness_lit.org
:ARCHIVE_OLPATH: TODOS
:ARCHIVE_CATEGORY: fls-article
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: noexport
:END:
The following two source code blocks set up a LaTeX class named
=koma-article= that is referenced near the top of the file. The
=koma-article= class is based on the [[http://www.ctan.org/pkg/koma-script][Koma script]] article class
=scrartcl=, which uses a sans-serif font for headings and a serif font
for body text.

The =koma-article= class uses fonts from the [[http://www.gust.org.pl/projects/e-foundry/tex-gyre/][TeX Gyre collection of
fonts]]. As explained in [[http://www.gust.org.pl/projects/e-foundry/tex-gyre/tb87hagen-gyre.pdf][The New Font Project: TeX Gyre]], a goal of the
project was to produce good quality fonts with diacritical characters
sufficient to cover all European languages as well as Vietnamese and
Navajo. 

The source code block named [[koma-article-times][koma-article-times]] is based on the Times
Roman font. The serif Termes font is a replacement for Times Roman,
the sans-serif Heros font is a replacement for Helvetica, and the
typewriter Cursor font is a replacement for Courier. The source code
block named [[koma-article-palatino][koma-article-palatino]] is based on the beautiful Palatino
font designed by Hermann Zapf. The Pagella font is the TeX Gyre
replacement for Palatino. Typographers often recommend that
linespacing be increased slightly with Palatino, and this has been
achieved with the addition of the =linespacing= command.

The Tex Gyre fonts benefit from the [[http://ctan.org/tex-archive/macros/latex/contrib/microtype][microtype package]], which provides
"subliminal refinements towards typographical perfection," including
"character protrusion and font expansion, furthermore the adjustment
of inter-word spacing and additional kerning, as well as hyphenatable
letter spacing (tracking) and the possibility to disable all or
selected ligatures."

In addition, the [[http://www.ctan.org/tex-archive/macros/latex/contrib/paralist/][paralist package]] is used for its compact versions of
the LaTeX list environments.

Finally, the =newcommand= is provided merely as an illustration of one
way to move LaTeX declarations out of the Org file header. This one is
useful in my work as an archaeologist and over the years it has crept
into my BibTeX database. It shouldn't interfere with your work, but
you might want to remove it or replace it with LaTeX commands that you
do frequently use.

#+name: koma-article-times
#+header: :results silent
#+begin_src emacs-lisp
   (require 'ox-latex)
   (add-to-list 'org-latex-classes
                '("koma-article"
                  "\\documentclass{scrartcl}
                   \\usepackage{microtype}
                   \\usepackage{tgtermes}
                   \\usepackage[scale=.9]{tgheros}
                   \\usepackage{tgcursor}
                   \\usepackage{paralist}
                   \\newcommand{\\rc}{$^{14}C$}"
                  ("\\section{%s}" . "\\section*{%s}")
                  ("\\subsection{%s}" . "\\subsection*{%s}")
                  ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                  ("\\paragraph{%s}" . "\\paragraph*{%s}")
                  ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
#+end_src

#+name: koma-article-palatino
#+header: :results silent
#+begin_src emacs-lisp
   (require 'ox-latex)
   (add-to-list 'org-latex-classes
                '("koma-article"
                  "\\documentclass{scrartcl}
                   \\usepackage{microtype}
                   \\usepackage{tgpagella}
                   \\usepackage[scale=.9]{tgheros}
                   \\usepackage{tgcursor}
                   \\usepackage{paralist}
                   \\newcommand{\\rc}{$^{14}C$}"
                  ("\\section{%s}" . "\\section*{%s}")
                  ("\\subsection{%s}" . "\\subsection*{%s}")
                  ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                  ("\\paragraph{%s}" . "\\paragraph*{%s}")
                  ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
#+end_src

*** Local variables                                              :noexport:
:PROPERTIES:
:ARCHIVE_TIME: 2021-02-06 Sat 21:10
:ARCHIVE_FILE: ~/Dropbox/org/mindfulness_lit.org
:ARCHIVE_OLPATH: TODOS
:ARCHIVE_CATEGORY: fls-article
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: noexport
:END:

befinden sich ganz am Ende des Dokuments (Fußnoten)

* Footnotes

# Local Variables: 
# eval: (and (fboundp 'org-sbe) (not (fboundp 'sbe)) (fset 'sbe 'org-sbe))
# eval: (sbe "koma-article-palatino")
# eval: (sbe "user-entities")
# eval: (sbe "set-pdf-process-biber")
# eval: (sbe "ebib-setup")
# eval: (sbe "define-biblatex-cite-link")
# End:
